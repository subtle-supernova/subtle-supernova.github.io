<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">Sullivan. Jeremy Sullivan. : Posts tagged 'html'</title>
 <link rel="self" href="https://subtle-supernova.github.io/feeds/html.atom.xml" />
 <link href="https://subtle-supernova.github.io/tags/html.html" />
 <id>urn:https-subtle-supernova-github-io:-tags-html-html</id>
 <updated>2016-08-02T00:02:31Z</updated>
 <entry>
  <title type="text">Markdown to HTML to PDF - My Resume's Journey</title>
  <link rel="alternate" href="https://subtle-supernova.github.io/blog/2016/08/02/markdown-to-html-to-pdf-my-resume-s-journey?utm_source=html&amp;utm_medium=Atom" />
  <id>urn:https-subtle-supernova-github-io:-blog-2016-08-02-markdown-to-html-to-pdf-my-resume-s-journey</id>
  <published>2016-08-02T00:02:31Z</published>
  <updated>2016-08-02T00:02:31Z</updated>
  <author>
   <name>Jeremy Sullivan </name></author>
  <content type="html">
&lt;p&gt;&lt;em&gt;Replace this with your post text. Add one or more comma-separated Tags above. The special tag &lt;code&gt;DRAFT&lt;/code&gt; will prevent the post from being published.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id="how-my-resume-starts-out-as-markdown"&gt;How my resume starts out as markdown&lt;/h1&gt;

&lt;h2 id="why-would-you-do-this"&gt;Why would you do this?&lt;/h2&gt;

&lt;p&gt;Other than my typical reason of &amp;ldquo;because it&amp;rsquo;s fun?&amp;rdquo; Document formats are really hard. Not only are they hard, but they&amp;rsquo;re one of the few things in computing we haven&amp;rsquo;t managed to simplify. Sure, we&amp;rsquo;ve made them &lt;em&gt;featureful&lt;/em&gt; but not &lt;em&gt;simple&lt;/em&gt;. Have you ever tried to parse an excel file in a meaningful way? It&amp;rsquo;s not fun.&lt;/p&gt;

&lt;p&gt;This brings me to my particular problem: I only want to type my resume once, but I wan&amp;rsquo;t it to be as accessable as possible. I love the idea of typing it in markdown.  I believe markdown to be a sort of mad genius in the same vein as JSON. It only solves about 80% of our problems but it&amp;rsquo;s so easy that it makes it hard to resist.  Another really great thing about this simplicity is that we can hack on the other 20% it doesn&amp;rsquo;t solve without too much effort.&lt;/p&gt;

&lt;h2 id="how-do-i-do-this"&gt;How do I do this?&lt;/h2&gt;

&lt;p&gt;Well, I&amp;rsquo;ve already written about my static content generator. Markdown to HTML isn&amp;rsquo;t exactly exciting. HTML to PDF, however, is barrels of fun.  To accomplish this I use &lt;a href="http://wkhtmltopdf.org/"&gt;wkhtmltopdf&lt;/a&gt;. It&amp;rsquo;s a wonderful project that leverages webkit and QT. The coolest part of this tool? You can do it all from CLI. This has saved my neck a couple of times, because generating PDFs is a pain, but people &lt;em&gt;love&lt;/em&gt; them. On the flip side, generating HTML is a well explored and decently solved problem.  That creates a grand solution for us: generate semi-dynamic HTML, and then have some automated process spit out a PDF using wkhtmltopdf. Since it&amp;rsquo;s all in the CLI, you can do this using a simple  bash script and then leverage arcane things such as the &lt;code&gt;mail&lt;/code&gt; command for delivery. I love simple things.&lt;/p&gt;

&lt;h2 id="whats-next"&gt;What&amp;rsquo;s next?&lt;/h2&gt;

&lt;p&gt;For my resume, I&amp;rsquo;d like to do some intermediate processing. While wkhtmltopdf supports pulling from a URL directly (which is pretty sweet) we can also use local files. I&amp;rsquo;ll need to remove some  things like navigation and then add some things like more contact information. I think it&amp;rsquo;d be a really cool project to let someone enter an email address and recieve the processed resume.  Well, I&amp;rsquo;ve beel looking for a reason to dive into the wide and strange world of OCaml webapps. More on that later, perhaps!&lt;/p&gt;
&lt;!-- more--&gt;</content></entry></feed>